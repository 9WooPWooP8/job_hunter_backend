"""extended vacancies and companies

Revision ID: 89400c3c4127
Revises: 4ca4b45931be
Create Date: 2023-12-02 19:05:54.248455

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from src.rates.models import Rate


# revision identifiers, used by Alembic.
revision: str = "89400c3c4127"
down_revision: Union[str, None] = "4ca4b45931be"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rates",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("rates_pkey")),
    )
    op.create_table(
        "required_experiences",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("required_experiences_pkey")),
    )
    op.add_column("vacancies", sa.Column("plug", sa.String(), nullable=False))
    op.add_column("vacancies", sa.Column("experience_id", sa.Integer(), nullable=False))
    op.add_column("vacancies", sa.Column("rate_id", sa.Integer(), nullable=False))
    op.create_foreign_key(
        op.f("vacancies_rate_id_fkey"), "vacancies", "rates", ["rate_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("vacancies_experience_id_fkey"),
        "vacancies",
        "required_experiences",
        ["experience_id"],
        ["id"],
    )

    op.bulk_insert(
        Rate.__table__,
        [
            {"id": 1, "name": "Полная занятость"},
            {"id": 2, "name": "Частичная занятость"},
            {"id": 3, "name": "Стажировка"},
        ],
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("vacancies_experience_id_fkey"), "vacancies", type_="foreignkey"
    )
    op.drop_constraint(op.f("vacancies_rate_id_fkey"), "vacancies", type_="foreignkey")
    op.drop_column("vacancies", "rate_id")
    op.drop_column("vacancies", "experience_id")
    op.drop_column("vacancies", "plug")
    op.drop_table("required_experiences")
    op.drop_table("rates")
    # ### end Alembic commands ###
