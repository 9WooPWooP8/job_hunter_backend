"""applicant-recruiter-applicant_status

Revision ID: 6760ca0f66e0
Revises: a871e82ad12c
Create Date: 2023-10-14 21:18:15.612571

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6760ca0f66e0"
down_revision: Union[str, None] = "a871e82ad12c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    applicants_statuses_table = op.create_table(
        "applicant_statuses",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("applicant_statuses_pkey")),
    )
    op.create_table(
        "applicants",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["applicant_statuses.id"],
            name=op.f("applicants_status_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("applicants_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("applicants_pkey")),
    )
    op.create_table(
        "recruiters",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("recruiters_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("recruiters_pkey")),
    )

    # ### end Alembic commands ###

    op.bulk_insert(
        applicants_statuses_table,
        [
            {"id": 1, "name": "actively looking for job"},
            {"id": 2, "name": "accepting offers"},
            {"id": 3, "name": "not looking for job"},
        ],
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("recruiters")
    op.drop_table("applicants")
    op.drop_table("applicant_statuses")
    # ### end Alembic commands ###
