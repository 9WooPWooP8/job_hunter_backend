"""add_resume

Revision ID: 4ca4b45931be
Revises: 676bb06977d2
Create Date: 2023-11-28 15:44:25.036648

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4ca4b45931be"
down_revision: Union[str, None] = "676bb06977d2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "contacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("contact", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("contacts_pkey")),
    )
    op.create_table(
        "educations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("educations_pkey")),
    )
    op.create_table(
        "personal_qualities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("personal_qualities_pkey")),
    )
    op.create_table(
        "resumes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("applicant_id", sa.Integer(), nullable=False),
        sa.Column("photo", sa.String(), nullable=True),
        sa.Column("job_title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["applicant_id"],
            ["applicants.user_id"],
            name=op.f("resumes_applicant_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("resumes_pkey")),
    )
    op.create_table(
        "employment_records",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.Column("organization", sa.String(), nullable=False),
        sa.Column("position", sa.String(), nullable=False),
        sa.Column("resume_id", sa.Integer(), nullable=False),
        sa.Column("still_working", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resumes.id"],
            name=op.f("employment_records_resume_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("employment_records_pkey")),
    )
    op.create_table(
        "resume_contact",
        sa.Column("resume_id", sa.Integer(), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=False),
        sa.Column("extra_data", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["contact_id"], ["contacts.id"], name=op.f("resume_contact_contact_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["resume_id"], ["resumes.id"], name=op.f("resume_contact_resume_id_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "resume_id", "contact_id", name=op.f("resume_contact_pkey")
        ),
    )
    op.create_table(
        "resume_education",
        sa.Column("resume_id", sa.Integer(), nullable=False),
        sa.Column("education_id", sa.Integer(), nullable=False),
        sa.Column("end_year", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["education_id"],
            ["educations.id"],
            name=op.f("resume_education_education_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["resume_id"], ["resumes.id"], name=op.f("resume_education_resume_id_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "resume_id", "education_id", name=op.f("resume_education_pkey")
        ),
    )
    op.create_table(
        "resume_personal_quality",
        sa.Column("resume_id", sa.Integer(), nullable=False),
        sa.Column("personal_quality_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["personal_quality_id"],
            ["personal_qualities.id"],
            name=op.f("resume_personal_quality_personal_quality_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resumes.id"],
            name=op.f("resume_personal_quality_resume_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "resume_id",
            "personal_quality_id",
            name=op.f("resume_personal_quality_pkey"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("resume_personal_quality")
    op.drop_table("resume_education")
    op.drop_table("resume_contact")
    op.drop_table("employment_records")
    op.drop_table("resumes")
    op.drop_table("personal_qualities")
    op.drop_table("educations")
    op.drop_table("contacts")
    # ### end Alembic commands ###
